############################################################################################################
#
#    Clupatra
#
#    topological pattern recognition (for the TPC)
#
#    F.Gaede, DESY, 2011
#
#
############################################################################################################


------------------------------------------------------------
 

- current version of algorithm ( Dec, 2011)

   ClupatraProcessor.cc

 - fill histos for track finding efficiencies
   TrackEfficiency.cc
  
 - update cellIDs in plder file:      
   FixCellIDs.cc

  steering files in ./examples
 
   clupa.xml
      - do patrec and display result in CED

   clupa_ana.xml 
      - pattern recognition in batch
      - creates ClupatraTrackSegments
                ClupatraTracks
                
   trkeff.xml
     - create root file with histos for track finding efficiencies
   
     trkeff.C
     - make nice plots for Clupatra, LEPTracking and FullLDCTracking


 =============================================================================================================
  -----------
 | v00-05-01 |
  -----------
      - patch release: bug fix: protect against tracks w/o TS at firat/last hit

   --------
 | v00-05 |
  --------

      - reduce memory footprint: deal with one KalTest track at a time wherever possible
        (saves >2MByte/track)

      - properly set the bit UTIL::ILDTrkHitQualityBit::USED_IN_FIT
        for all trackerhits used in fit

      - set correct subdetectorHitNumbers() for used in fit
         ( trk->subdetectorHitNumbers()[ 2*lcio::ILDDetID::TPC - 1 ] =  usedInFIt ; 
           trk->subdetectorHitNumbers()[ 2*lcio::ILDDetID::TPC - 2 ] =  nHit ;  )

      - algorithmic improvements:
          - introduce a loop over increasing distance cuts for finding the tracks seeds
             -> fixdes some of the problems seen @ 3 TeV with extremely boosted jets

          - use function split_multiplicity() to split up merged cluster seeds if possible
             ( improves efficiencies in forward region )

           - added create_n_clusters and use for splitting up 
            clusters with multiplicities 4 and 5 

      - added gear and steering file for CLIC detector

      - added some debugging functionality
        - new track debugging processor - under developmet: TrackCheckMCTruth
        - added debug method printTrackerHit() for picking 
        - added optional debug collections:
          ClupatraPoorQualityTracks, ClupatraOuterSegments, ClupatraInnerSegments, ClupatraMiddleSegments
	  
       - improved TrackEfficiencyProcessor
           - extended pt range to 500 GeV 
           - introduce cut on good hit fraction (96%)
             (needs MarlinReco v01-01 )

 -----------
 | v00-04-01 |
  -----------

     - fixed (small) memory leak in src/ClupatraProcessor.cc

  --------
 | v00-04 |
  --------
    - src/ClupatraProcessor.cc: - improved re-clustering:
      - now also loop in (larger) pad row range
      - increase maxdeltaChi2
    - src/FixCellIDs.cc: - reduced verbosity level from WARNING to
      DEBUG5 for missing collections

  --------
 | v00-03 |
  -------- 
     - write out canonical track states: AtIP, AtFirst/LastHit, AtCalorimeter

     - made hard coded parameters into processor parameters:
	  MaxDeltaChi2, Chi2Cut, MaxStepWithoutHit, PadRowRange,
	  MinLayerFractionWithMultiplicity, MinLayerNumberWithMultiplicity

     - added optional picking up of Si-hits (experiemtal)
      
     - add subdetectorHitNumbers:
	  2*ILDDetID::TPC-1 : hitsinFit
	  2*ILDDetID::TPC-2 : hitsinTrack
	  
    - cleaned up code and removed obsolete processors
   


  --------
 | v00-02 |
  -------- 
      - NNClusterer.h : re-factoring of NNCluster code
         - clearer type definitions 
         - use Element and Cluster (as oposed to GenericHits/GenericClusters)
         - clearer memory management
            - classes PtrVector and PtrList: user defines ownership
         - introduced NNClusterer class to collect cluster functions and
          conveneient typedefs

      - clupatra_new.cc :   re-factoring of clupatra helper code
          using new NNClusterer      

      - rewrote ClupatraProcessor to use clupatra_new and NNClusterer and
        MarlinTrk package
         => KalTest/KalTrack and KalDet like classes no longer needed

      - old classs and code still left for comparisons ....
        
  --------
 | v00-01 |
  -------- 
        *  first tagged version 

        -  first properly working of the algorithm ( ClupatraNew ) 

        -  status of ILD Metting, Orsay 2011
 
